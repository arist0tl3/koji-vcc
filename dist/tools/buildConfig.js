"use strict";

/**
 * buildConfig.js
 * 
 * What it does:
 *   This file takes all of the customization json files and wraps them
 *   into a single json string. It also packages route and page information
 *   from the backend and frontend directories.
 * 
 * Things to edit:
 *   Do not edit this file unless you really know what you're doing.
 *   If you have some complicated customization system that goes
 *   beyond what already exists you might have to change this
 *   file to include the customizations.
 */
var readDirectory = require('./readDirectory.js');

var findRootDirectory = require('./findRootDirectory.js');

var fs = require('fs');

module.exports = function () {
  var projectConfig = {
    pages: [],
    routes: []
  };
  var root = findRootDirectory();
  readDirectory(root).filter(function (path) {
    return (path.endsWith('koji.json') || path.includes('.koji')) && !path.includes('.koji-resources');
  }).forEach(function (path) {
    try {
      var file = JSON.parse(fs.readFileSync(path, 'utf8'));
      console.log('f', file);
      Object.keys(file).forEach(function (key) {
        // If the key already exists in the project config, use it
        if (projectConfig[key]) {
          if (Array.isArray(projectConfig[key]) && Array.isArray(file[key])) {
            projectConfig[key] = projectConfig[key].concat(file[key]);
          } else {
            projectConfig[key] = Object.assign(projectConfig[key], file[key]);
          }
        } else {
          // Otherwise, set it
          projectConfig[key] = file[key];
        }
      }); // Create a map of backend routes by name

      projectConfig.backend = {};

      if (projectConfig.routes) {
        projectConfig.routes.forEach(function (_ref) {
          var name = _ref.name,
              route = _ref.route;
          projectConfig.backend[name] = "".concat(process.env.KOJI_BACKEND_URL).concat(route);
        });
      }
    } catch (err) {//
    }
  });
  projectConfig.serviceMap = Object.keys(process.env).reduce(function (acc, cur) {
    if (cur.startsWith('KOJI_SERVICE_URL')) {
      acc[cur.replace('KOJI_SERVICE_URL_', '').toLowerCase()] = process.env[cur];
    }

    return acc;
  }, {});
  return JSON.stringify(projectConfig);
};